// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
 id String @id @map("_id") @default(auto()) @db.ObjectId
 email String @unique
 refreshToken String?
 password String
 username String @unique
 cart UserCart?
 userLink String? @unique
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
}
model UserCart{
 id String @id @map("_id") @default(auto()) @db.ObjectId
 userId String @db.ObjectId @unique
 user User @relation(fields: [userId], references: [id])
 productIds String[] @db.ObjectId
 products Product[] @relation(fields: [productIds], references: [id])
}


model Product{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    name String
    image Image[]
    price Int?
    link String? @unique
    ProductTypeId String? @db.ObjectId
    productType ProductType? @relation(fields: [ProductTypeId], references: [id])
    userCartIds String[] @db.ObjectId
    userCarts UserCart[] @relation(fields: [userCartIds], references: [id])
}



model Category{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    productTypes   ProductType[]
    name String
}
model ProductType{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    name String
    products   Product[]
    category Category? @relation(fields: [categoryID], references: [id])
    categoryID String? @db.ObjectId
}


model Image{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    src String
    productID String? @db.ObjectId
    product   Product?   @relation(fields: [productID], references: [id])
}

